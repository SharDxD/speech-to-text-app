# Redirect HTTP → HTTPS
server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name 10.3.7.27;
    return 301 https://$host$request_uri;
}

# HTTPS front-end
server {
    listen 443 ssl http2 default_server;
    listen [::]:443 ssl http2 default_server;
    server_name 10.3.7.27;

    # your self-signed cert
    ssl_certificate     /etc/nginx/ssl/speechapp.crt;
    ssl_certificate_key /etc/nginx/ssl/speechapp.key;
    ssl_protocols       TLSv1.2 TLSv1.3;
    ssl_ciphers         HIGH:!aNULL:!MD5;

    gzip_types text/plain application/xml application/x-javascript text/css application/json text/javascript;

#    location ~* \.(js|jpg|png|css)$ {
#       root /home/kgolubev/speech-app/thesis/speech-to-text-app/static/;
#       expires 30d;
#       try_files $uri =404;
#    }

    location ^~ /static/ {
        # this must be OWNER + GROUP = nginx:www-data (or similar) and o+r on the files
        alias /home/kgolubev/speech-app/thesis/speech-to-text-app/static/;
        expires 30d;
        add_header Cache-Control "public, must-revalidate, proxy-revalidate";
        try_files $uri =404;
    }    
    
    location ~ \.css$ {
        alias /home/kgolubev/speech-app/thesis/speech-to-text-app/static/;
        #add_header Content-Type text/css;
        expires max;
    }

    location ~ \.js$ {
        alias /home/kgolubev/speech-app/thesis/speech-to-text-app/static/;
        expires max;
        #add_header Content-Type application/x-javascript;
    }

    # everything else → gunicorn
    location / {
        proxy_pass         http://127.0.0.1:8000;
        proxy_set_header   Host                 $host;
        proxy_set_header   X-Real-IP            $remote_addr;
        proxy_set_header   X-Forwarded-For      $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto    $scheme;
    }
    rewrite ^/assets/([a-z\-]+)-([a-z0-9]+).(css|js) /assets/$1.$3;
}

